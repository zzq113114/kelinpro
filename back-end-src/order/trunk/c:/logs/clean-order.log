Neither @ContextConfiguration nor @ContextHierarchy found for test class [clean.platform.disorder.DisOrderApplicationTests], using SpringBootContextLoader
Could not detect default resource locations for test class [clean.platform.disorder.DisOrderApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
Could not detect default configuration classes for test class [clean.platform.disorder.DisOrderApplicationTests]: DisOrderApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
Found @SpringBootConfiguration clean.platform.disorder.DisOrderApplication for test class clean.platform.disorder.DisOrderApplicationTests
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d62fe5b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@49964d75, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@528c868, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@466276d8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5ce8d869, org.springframework.test.context.transaction.TransactionalTestExecutionListener@27eedb64, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@64c63c79, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@31c7528f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2b76ff4e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a1234bf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2f62ea70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@24ba9639]
Starting DisOrderApplicationTests on userlocal.local with PID 2654 (started by zhangzhenqing in /Volumes/FileHome/Asecc/kelinpro/jiazhengPro/back-end-src/order/trunk)
Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@72758afa: startup date [Thu Dec 19 13:46:00 CST 2019]; root of context hierarchy
--------------创建分布式ID生成器---------------------
*****************主数据源初始化********************
*****************主数据源初始化成功******************
**********************创建分页对象****************************
-------------------------网关跨域访问设值--------------------------
Mapped "{[/company/add],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.CompanyController.addCompany(clean.platform.disorder.model.dto.CompanyVo)
Mapped "{[/company/modify],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.CompanyController.modifyCompany(clean.platform.disorder.model.dto.CompanyVo)
Mapped "{[/company/delete/{id}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.CompanyController.deleteCompany(java.lang.Long)
Mapped "{[/company/page],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<com.github.pagehelper.PageInfo<clean.platform.disorder.model.entity.vo.TbCompanyVo>> clean.platform.disorder.controller.CompanyController.pageCompanys(clean.platform.disorder.model.query.QueryCompany)
Mapped "{[/company/info/{id}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<clean.platform.disorder.model.entity.vo.TbCompanyVo> clean.platform.disorder.controller.CompanyController.queryCompanys(java.lang.Long)
Mapped "{[/company/serviceItems],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbServiceItemVo>> clean.platform.disorder.controller.CompanyController.queryAllServiceItems()
Mapped "{[/company/itemConfig/{companyId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbCompanyItemVo>> clean.platform.disorder.controller.CompanyController.queryCompanyItemConfigInfo(java.lang.Long)
Mapped "{[/company/itemConfig/save],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.CompanyController.saveCompanyItemConfig(clean.platform.disorder.model.entity.vo.TbServiceItemConfigVo)
Mapped "{[/login/byAccount],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<clean.platform.disorder.model.dto.LoginUser> clean.platform.disorder.controller.LoginController.userLogin(clean.platform.disorder.model.entity.vo.TbUserVo)
Mapped "{[/maintenanc/list],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbOriginVo>> clean.platform.disorder.controller.MaintenancController.queryAllOriginList()
Mapped "{[/order/modify]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.updateOrder(clean.platform.disorder.model.dto.OrderVo)
Mapped "{[/order/add]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.addOrder(clean.platform.disorder.model.dto.OrderVo)
Mapped "{[/order/delete/{id}]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.deleteOrder(java.lang.Long)
Mapped "{[/order/orderPage],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<com.github.pagehelper.PageInfo<clean.platform.disorder.model.entity.vo.TbOrderVo>> clean.platform.disorder.controller.OrderController.queryOrderPageList(clean.platform.disorder.model.query.QueryOrder)
Mapped "{[/order/notDisOrderPage]}" onto public clean.platform.disorder.model.ResponseResult<com.github.pagehelper.PageInfo<clean.platform.disorder.model.entity.vo.TbOrderVo>> clean.platform.disorder.controller.OrderController.queryNotDisOrderPageList(clean.platform.disorder.model.query.QueryOrder)
Mapped "{[/order/info/{id}]}" onto public clean.platform.disorder.model.ResponseResult<clean.platform.disorder.model.entity.vo.TbOrderVo> clean.platform.disorder.controller.OrderController.queryOrderInfo(java.lang.Long)
Mapped "{[/order/dispatch],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.dispatchStaffOrder(clean.platform.disorder.model.entity.vo.TbOrderVo)
Mapped "{[/order/finish],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.finishedOrder(clean.platform.disorder.model.entity.vo.TbFinishedOrderVo)
Mapped "{[/order/cancelOrder/{orderId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.cancelOrder(java.lang.Long)
Mapped "{[/order/againOrder/{orderId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.againDisOrder(java.lang.Long)
Mapped "{[/order/resetOrder/{orderId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.OrderController.resetDisOrder(java.lang.Long)
Mapped "{[/role/list],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbRoleVo>> clean.platform.disorder.controller.RoleController.queryRoleList()
Mapped "{[/role/rolePage],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<com.github.pagehelper.PageInfo<clean.platform.disorder.model.entity.vo.TbRoleVo>> clean.platform.disorder.controller.RoleController.queryRolePage(clean.platform.disorder.model.query.QueryRole)
Mapped "{[/role/funMenuList],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbFunMenuVo>> clean.platform.disorder.controller.RoleController.queryAllFunMenu()
Mapped "{[/role/add],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.RoleController.adRole(clean.platform.disorder.model.entity.vo.TbRoleVo)
Mapped "{[/role/info/{roleId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<clean.platform.disorder.model.entity.vo.TbRoleVo> clean.platform.disorder.controller.RoleController.queryRoleInfo(java.lang.Long)
Mapped "{[/role/delete/{roleId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.RoleController.deletRole(java.lang.Long)
Mapped "{[/role/modify],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.RoleController.updateRole(clean.platform.disorder.model.entity.vo.TbRoleVo)
Mapped "{[/role/funMenu/{roleId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbFunMenuVo>> clean.platform.disorder.controller.RoleController.queryRoleFunMenuList(java.lang.Long)
Mapped "{[/role/menuAction/{roleId}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.dto.MenuActionInfo>> clean.platform.disorder.controller.RoleController.initMenuList(java.lang.Long)
Mapped "{[/staff/page],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<com.github.pagehelper.PageInfo<clean.platform.disorder.model.entity.vo.TbStaffVo>> clean.platform.disorder.controller.StaffController.queryOrderPageList(clean.platform.disorder.model.query.QueryStaff)
Mapped "{[/staff/add],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.StaffController.addStaff(clean.platform.disorder.model.entity.vo.TbStaffVo)
Mapped "{[/staff/modify],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.StaffController.updateStaff(clean.platform.disorder.model.entity.vo.TbStaffVo)
Mapped "{[/staff/delete/{id}]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.StaffController.deleteStaff(java.lang.Long)
Mapped "{[/staff/info/{id}]}" onto public clean.platform.disorder.model.ResponseResult<clean.platform.disorder.model.entity.vo.TbStaffVo> clean.platform.disorder.controller.StaffController.queryStaffInfo(java.lang.Long)
Mapped "{[/staff/list],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<java.util.List<clean.platform.disorder.model.entity.vo.TbStaffVo>> clean.platform.disorder.controller.StaffController.selectAllStaffList(clean.platform.disorder.model.query.QueryStaff)
Mapped "{[/user/add],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.UserController.addUser(clean.platform.disorder.model.entity.vo.TbUserVo)
Mapped "{[/user/modify],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.UserController.updateUser(clean.platform.disorder.model.entity.vo.TbUserVo)
Mapped "{[/user/delete/{id}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<?> clean.platform.disorder.controller.UserController.deleteUser(java.lang.Long)
Mapped "{[/user/info/{id}],methods=[GET]}" onto public clean.platform.disorder.model.ResponseResult<clean.platform.disorder.model.entity.vo.TbUserVo> clean.platform.disorder.controller.UserController.queryUserInfo(java.lang.Long)
Mapped "{[/user/page],methods=[POST]}" onto public clean.platform.disorder.model.ResponseResult<com.github.pagehelper.PageInfo<clean.platform.disorder.model.entity.vo.TbUserVo>> clean.platform.disorder.controller.UserController.queryUserPage(clean.platform.disorder.model.query.QueryUser)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@72758afa: startup date [Thu Dec 19 13:46:00 CST 2019]; root of context hierarchy
Started DisOrderApplicationTests in 4.009 seconds (JVM running for 6.131)
Closing org.springframework.web.context.support.GenericWebApplicationContext@72758afa: startup date [Thu Dec 19 13:46:00 CST 2019]; root of context hierarchy
